name: build test

on: [push]

# Lots of jobs are defined below. Their format is:
#
# OS-VARIANT-TOOL
#
# where
#
# OS can be:
#
# * linux or
# * mac or
# * windows_msys2_clang64
#
# VARIANT can be:
#
# * native (to obtain a command line application) or
# * wasm (to get a WebAssembly version, to be embedded in a webpage) or
# * jnidll (to get a .DLL file that can be integrated in a Java application as a Java Native Interface),
#
# TOOL can be:
#
# * gradle (the build process is conducted by Gradle) or
# * cmake (the build process is run via CMake) or
# * npm (the build is performed via NPM).

jobs:
  linux-native-gradle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: prerequisites
      run: sudo apt update && sudo apt install build-essential libgmp-dev libmpfr-dev default-jdk
    - name: build
      run: ./gradlew installMinigiacLinux64Executable

  linux-native-cmake:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: prerequisites
      run: sudo apt update && sudo apt install build-essential libgmp-dev libmpfr-dev cmake
    - name: build
      run: mkdir cbuild && cd cbuild && cmake .. && make

  linux-wasm-gradle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: prerequisites
      run: sudo apt update && sudo apt install git default-jdk
    - name: build
      run: |
        git clone https://github.com/emscripten-core/emsdk.git
        ./gradlew installEmsdk
        cd emsdk
        ln -s . emsdk-portable
        mkdir emscripten
        cd emscripten
        ln -s ../upstream/emscripten latest
        cd ../..
        ./gradlew activateEmsdk createGiacWasmJs

  linux-jnidll-gradle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: prerequisites
      run: sudo apt update && sudo apt install build-essential libgmp-dev libmpfr-dev default-jdk
    - name: build
      run: ./gradlew javagiacLinux64SharedLibrary

  linux-nodejs-npm:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: prerequisites
      run: sudo apt update && sudo apt install build-essential libgmp-dev libmpfr-dev npm nodejs
    - name: build
      run: npm install

  mac-native-cmake:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: prerequisites
      run: brew install gmp mpfr readline coreutils cmake
    - name: build
      run: mkdir cbuild && cd cbuild && cmake .. && make

  mac-jnidll-gradle:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: prerequisites
      run: brew install gmp mpfr coreutils java11
    - name: build
      run: ./gradlew javagiacOsx_am64SharedLibrary

  windows_msys2_clang64-native-cmake:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v1
    - name: prerequisites
      uses: msys2/setup-msys2@v2
      with:
        msystem: CLANG64
        update: true
        install: >-
          base-devel
          mingw-w64-clang-x86_64-cc
          mingw-w64-clang-x86_64-cmake
          mingw-w64-clang-x86_64-make
          mingw-w64-clang-x86_64-gmp
          mingw-w64-clang-x86_64-mpfr
    - name: build
      run: mkdir cbuild && cd cbuild && cmake -G "MinGW Makefiles" .. && mingw32-make

# Currently broken:
#  mac-nodejs-npm:
#    runs-on: macos-11
#    steps:
#    - uses: actions/checkout@v1
#    - name: prerequisites
#      run: brew install gmp mpfr readline coreutils node
#    - name: build
#      run: npm install

